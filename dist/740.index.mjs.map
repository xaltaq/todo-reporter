{"version":3,"file":"740.index.mjs","mappings":";;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sources":["webpack://todo-reporter/./node_modules/leasot/dist/lib/parsers/twigParser.js"],"sourcesContent":["import { getRegex, prepareComment } from '../utils/index.js';\nimport eol from 'eol';\nconst parserFactory = ({ customTags }) => {\n    const regex = getRegex(customTags);\n    const bangComment = new RegExp('{#' + regex + '#}', 'mig');\n    const htmlComment = new RegExp('<!--' + regex + '-->', 'mig');\n    return (contents, file) => {\n        const comments = [];\n        eol.split(contents).forEach((line, index) => {\n            let bangCommentMatch = bangComment.exec(line);\n            while (bangCommentMatch) {\n                const comment = prepareComment(bangCommentMatch, index + 1, file);\n                if (!comment) {\n                    break;\n                }\n                comments.push(comment);\n                bangCommentMatch = bangComment.exec(line);\n            }\n            bangComment.lastIndex = 0;\n            let htmlCommentMatch = htmlComment.exec(line);\n            while (htmlCommentMatch) {\n                const comment = prepareComment(htmlCommentMatch, index + 1, file);\n                if (!comment) {\n                    break;\n                }\n                comments.push(comment);\n                htmlCommentMatch = htmlComment.exec(line);\n            }\n            htmlComment.lastIndex = 0;\n        });\n        return comments;\n    };\n};\nexport default parserFactory;\n"],"names":[],"sourceRoot":""}